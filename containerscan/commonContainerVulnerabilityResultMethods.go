package containerscan

import "github.com/armosec/armoapi-go/armotypes"

func NewCommonContainerVulnerabilityResult() ContainerScanVulnerabilityResult {
	return &CommonContainerVulnerabilityResult{}
}

func (c *CommonContainerVulnerabilityResult) GetDesignators() armotypes.PortalDesignator {
	return c.Designators
}

func (c *CommonContainerVulnerabilityResult) GetContext() []armotypes.ArmoContext {
	return c.Context
}

func (c *CommonContainerVulnerabilityResult) GetWLID() string {
	return c.WLID
}

func (c *CommonContainerVulnerabilityResult) GetContainerScanID() string {
	return c.ContainerScanID
}

func (c *CommonContainerVulnerabilityResult) GetLayers() []ESLayer {
	return c.Layers
}

func (c *CommonContainerVulnerabilityResult) GetLayersNested() []ESLayer {
	return c.LayersNested
}

func (c *CommonContainerVulnerabilityResult) GetTimestamp() int64 {
	return c.Timestamp
}

func (c *CommonContainerVulnerabilityResult) GetIsLastScan() int {
	return c.IsLastScan
}

func (c *CommonContainerVulnerabilityResult) GetIsFixed() int {
	return c.IsFixed
}

func (c *CommonContainerVulnerabilityResult) GetIntroducedInLayer() string {
	return c.IntroducedInLayer
}

func (c *CommonContainerVulnerabilityResult) GetRelevantLinks() []string {
	return c.RelevantLinks
}

func (c *CommonContainerVulnerabilityResult) GetRelatedExceptions() []armotypes.VulnerabilityExceptionPolicy {
	return c.RelatedExceptions
}

func (c *CommonContainerVulnerabilityResult) GetVulnerability() VulnerabilityResult {
	return &c.Vulnerability
}

func (c *CommonContainerVulnerabilityResult) GetRelevantLabel() RelevantLabel {
	return c.RelevantLabel
}

func (c *CommonContainerVulnerabilityResult) GetClusterShortName() string {
	return c.ClusterShortName
}

func (c *CommonContainerVulnerabilityResult) SetDesignators(designators armotypes.PortalDesignator) {
	c.Designators = designators
}

func (c *CommonContainerVulnerabilityResult) SetContext(context []armotypes.ArmoContext) {
	c.Context = context
}

func (c *CommonContainerVulnerabilityResult) SetWLID(wlid string) {
	c.WLID = wlid
}

func (c *CommonContainerVulnerabilityResult) SetContainerScanID(containerScanID string) {
	c.ContainerScanID = containerScanID
}

func (c *CommonContainerVulnerabilityResult) SetLayers(layers []ESLayer) {
	c.Layers = layers
}

func (c *CommonContainerVulnerabilityResult) SetLayersNested(layersNested []ESLayer) {
	c.LayersNested = layersNested
}

func (c *CommonContainerVulnerabilityResult) SetTimestamp(timestamp int64) {
	c.Timestamp = timestamp
}

func (c *CommonContainerVulnerabilityResult) SetIsLastScan(isLastScan int) {
	c.IsLastScan = isLastScan
}

func (c *CommonContainerVulnerabilityResult) SetIsFixed(isFixed int) {
	c.IsFixed = isFixed
}

func (c *CommonContainerVulnerabilityResult) SetIntroducedInLayer(introducedInLayer string) {
	c.IntroducedInLayer = introducedInLayer
}

func (c *CommonContainerVulnerabilityResult) SetRelevantLinks(relevantLinks []string) {
	c.RelevantLinks = relevantLinks
}

func (c *CommonContainerVulnerabilityResult) SetRelatedExceptions(relatedExceptions []armotypes.VulnerabilityExceptionPolicy) {
	c.RelatedExceptions = relatedExceptions
}

func (c *CommonContainerVulnerabilityResult) SetRelevantLabel(relevantLabel RelevantLabel) {
	c.RelevantLabel = relevantLabel
}

func (c *CommonContainerVulnerabilityResult) SetClusterShortName(clusterShortName string) {
	c.ClusterShortName = clusterShortName
}
