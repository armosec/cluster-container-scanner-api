package containerscan

import "github.com/armosec/armoapi-go/armotypes"

func NewVulnerability() VulnerabilityResult {
	return &Vulnerability{}
}

func (v *Vulnerability) GetName() string {
	return v.Name
}

func (v *Vulnerability) GetImageID() string {
	return v.ImageID
}

func (v *Vulnerability) GetImageTag() string {
	return v.ImageTag
}

func (v *Vulnerability) GetRelatedPackageName() string {
	return v.RelatedPackageName
}

func (v *Vulnerability) GetPackageVersion() string {
	return v.PackageVersion
}

func (v *Vulnerability) GetLink() string {
	return v.Link
}

func (v *Vulnerability) GetDescription() string {
	return v.Description
}

func (v *Vulnerability) GetSeverity() string {
	return v.Severity
}

func (v *Vulnerability) GetSeverityScore() int {
	return v.SeverityScore
}

func (v *Vulnerability) GetFixes() VulFixes {
	return v.Fixes
}

func (v *Vulnerability) GetIsRelevant() *bool {
	return v.IsRelevant
}

func (v *Vulnerability) GetUrgentCount() int {
	return v.UrgentCount
}

func (v *Vulnerability) GetNeglectedCount() int {
	return v.NeglectedCount
}

func (v *Vulnerability) GetHealthStatus() string {
	return v.HealthStatus
}

func (v *Vulnerability) GetCategories() VulnerabilityCategory {
	return v.Categories
}

func (v *Vulnerability) GetExceptionApplied() []armotypes.VulnerabilityExceptionPolicy {
	return v.ExceptionApplied
}

func (v *Vulnerability) SetName(name string) {
	v.Name = name
}

func (v *Vulnerability) SetImageID(ImageID string) {
	v.ImageID = ImageID
}

func (v *Vulnerability) SetImageTag(ImageTag string) {
	v.ImageTag = ImageTag
}

func (v *Vulnerability) SetRelatedPackageName(relatedPackageName string) {
	v.RelatedPackageName = relatedPackageName
}

func (v *Vulnerability) SetPackageVersion(packageVersion string) {
	v.PackageVersion = packageVersion
}

func (v *Vulnerability) SetLink(link string) {
	v.Link = link
}

func (v *Vulnerability) SetDescription(description string) {
	v.Description = description
}

func (v *Vulnerability) SetSeverity(severity string) {
	v.Severity = severity
}

func (v *Vulnerability) SetSeverityScore(severityScore int) {
	v.SeverityScore = severityScore
}

func (v *Vulnerability) SetFixes(fixes VulFixes) {
	v.Fixes = fixes
}

func (v *Vulnerability) SetUrgentCount(urgentCount int) {
	v.UrgentCount = urgentCount
}

func (v *Vulnerability) SetNeglectedCount(neglectedCount int) {
	v.NeglectedCount = neglectedCount
}

func (v *Vulnerability) SetHealthStatus(healthStatus string) {
	v.HealthStatus = healthStatus
}

func (v *Vulnerability) SetCategories(categories VulnerabilityCategory) {
	v.Categories = categories
}

func (v *Vulnerability) SetExceptionApplied(exceptionApplied []armotypes.VulnerabilityExceptionPolicy) {
	v.ExceptionApplied = exceptionApplied
}

func (v *Vulnerability) SetIsRelevant(isRelevant *bool) {
	v.IsRelevant = isRelevant
}
